// This script was generated by ChatGPT and slightly modified by me.
// My input: Can you help me to generate a code for Node.js script, which will simulate disputes between 2 AI agents, both powered by GPT-3.5 turbo model. Assume, that open ai api key will be passed through an environment variable OPENAI_API_KEY
// Update: Although the logic of the script looks valid, it didn't work and required quite few updates

const { Configuration, OpenAIApi } = require("openai");
require('dotenv').config();

const TOPIC_TO_DISCUSS = "Can people live in a simulation? If so, should we try to escape it? Why?";
const MAX_TOKENS = 2000;

const configuration = new Configuration({
  apiKey: process.env.OPENAI_API_KEY,
});
const openai = new OpenAIApi(configuration);

async function generateResponse(prompt) {
  const response = await openai.createCompletion({
    model: 'text-davinci-003',
    prompt: prompt,
    max_tokens: MAX_TOKENS,
    n: 1,
    stop: null,
    temperature: 0.8, // A higher value (e.g., 1.0) will result in more diverse and creative responses, while a lower value (e.g., 0.1) will produce more focused and deterministic responses
  });

  return response.data.choices[0].text.trim();
}

async function simulateDispute(turns) {
  let prompt = `Two AI agents powered by GPT-3.5 Turbo are having a dispute about the following topic: "${TOPIC_TO_DISCUSS}". Agent A starts the conversation.\n\nAgent A:`;
  console.log(prompt);

  for (let i = 0; i < turns; i++) {
    const agent = i % 2 === 0 ? 'Agent B' : 'Agent A';
    const response = await generateResponse(prompt);
    console.log(`${agent}: ${response}`);
    prompt += `\n${agent}: ${response}`;
  }
}

// Run the simulation with the desired number of turns.
simulateDispute(10);
